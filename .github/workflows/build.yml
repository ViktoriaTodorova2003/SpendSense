name: CI Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Make gradlew executable
        run: |
          chmod +x Implementation/services/budget-service/gradlew
          chmod +x Implementation/services/expense-service/gradlew

      - name: Build budget-service JAR
        run: |
          cd Implementation/services/budget-service
          ./gradlew build -x test

      - name: Build expense-service JAR
        run: |
          cd Implementation/services/expense-service
          ./gradlew build -x test

      - name: Copy JARs to openjdk folders
        run: |
          cp Implementation/services/budget-service/build/libs/budget-service-0.0.1-SNAPSHOT.jar Implementation/services/budget-service/openjdk/
          cp Implementation/services/expense-service/build/libs/expense-service-0.0.1-SNAPSHOT.jar Implementation/services/expense-service/openjdk/

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose --version

      - name: List files in budget-service/openjdk before Docker build
        working-directory: Implementation/services
        run: |
          ls -l budget-service/openjdk

      - name: Build and start k6 container and run tests
        working-directory: Implementation/services
        run: |
          docker-compose -f docker-compose.yml build --no-cache --ignore-buildable gdpr-orchestrator
          docker-compose -f docker-compose.yml up -d k6

  dockerhub-push:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Make gradlew executable (dockerhub-push)
        run: |
          chmod +x Implementation/services/budget-service/gradlew
          chmod +x Implementation/services/expense-service/gradlew

      - name: Build budget-service JAR
        run: |
          cd Implementation/services/budget-service
          ./gradlew build -x test

      - name: Copy budget-service JAR to Docker context
        run: |
          cp Implementation/services/budget-service/build/libs/budget-service-0.0.1-SNAPSHOT.jar Implementation/services/budget-service/openjdk/

      - name: Build expense-service JAR
        run: |
          cd Implementation/services/expense-service
          ./gradlew build -x test

      - name: Copy expense-service JAR to Docker context
        run: |
          cp Implementation/services/expense-service/build/libs/expense-service-0.0.1-SNAPSHOT.jar Implementation/services/expense-service/openjdk/

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push budget-service image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/budget-service:${{ github.sha }} Implementation/services/budget-service/openjdk
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/budget-service:${{ github.sha }}

      - name: Build and push expense-service image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/expense-service:${{ github.sha }} Implementation/services/expense-service/openjdk
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/expense-service:${{ github.sha }}

  sonarqube:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Make gradlew executable (sonarqube)
        run: |
          chmod +x Implementation/services/budget-service/gradlew

      - name: Build budget-service JAR (sonarqube)
        run: |
          cd Implementation/services/budget-service
          ./gradlew build -x test

      - name: SonarCloud Analysis (budget-service)
        run: |
          ./gradlew sonarqube -Dsonar.projectKey=ViktoriaTodorova2003_SpendSense -Dsonar.organization=viktoriatodorova2003 -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        working-directory: Implementation/services/budget-service
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy-to-aks:
    runs-on: ubuntu-latest
    needs: dockerhub-push
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Update image tags in k8s manifests
        run: |
          sed -i "s|image: .*/budget-service:.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/budget-service:${{ github.sha }}|g" Implementation/infra/k8s/budget-service.yaml
          sed -i "s|image: .*/expense-service:.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/expense-service:${{ github.sha }}|g" Implementation/infra/k8s/expense-service.yaml

      - name: Deploy to AKS
        run: |
          kubectl apply -f Implementation/infra/k8s/

